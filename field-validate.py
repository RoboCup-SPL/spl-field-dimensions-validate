#!/usr/bin/env python3

import sys
import json

import autogenerated.validate


def main() -> None:
    if len(sys.argv) < 2:
        print("Error: need at least 1 field_dimensions.json as commandline argument for verification. Exiting.", file=sys.stderr)
        sys.exit(1)

    num_files = len(sys.argv) - 1
    print("This program will validate {0} files now. If you see error messages or stacktraces then one of the files is invalid.".format(num_files))

    for filename in sys.argv[1:]:
        with open(filename, mode="rt", encoding="utf8") as in_f:
            field_dimensions = json.load(in_f)

        try:
            # the following autogenerated validation function will raise exceptions if the JSON doesn't match the JSON Schema definition
            autogenerated.validate.validate_https___spl_robocup_org_2022_field_dimensions_schema_json(field_dimensions)
        except Exception as ಠ_ಠ:
            print('Error: Found a JSON Schema violation in file {0} . Printing exception and Exiting.'.format(filename), file=sys.stderr)
            raise ಠ_ಠ

        field_definitions = field_dimensions["field"]

        if ("goalAreaLength" in field_definitions) != ("goalAreaWidth" in field_definitions):
            print('Error: field needs to contain both of "goalAreaLength" and "goalAreaWidth", or none of them. Error in file {0} . Exiting.'.format(filename), file=sys.stderr)
            sys.exit(1)

    print('All {0} files are valid. Done.'.format(num_files))


if __name__ == '__main__':
    main()
